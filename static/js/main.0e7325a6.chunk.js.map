{"version":3,"sources":["components/Header.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/PageHeader.js","components/useTable.js","components/Popup.js","components/Notification.js","components/ConfirmDialog.js","pages/Employees/Employees.js","pages/HR/HRLogIn.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","backgroundColor","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","classes","AppBar","position","className","Toolbar","Grid","container","alignItems","item","sm","IconButton","Badge","badgeContent","color","margin","label","textTransform","minWidth","secondary","palette","light","main","primary","Controls","Input","props","name","value","error","onChange","other","TextField","variant","helperText","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","key","id","control","Radio","title","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","text","size","onClick","ActionButton","children","useForm","initialFValues","validateOnChange","validate","useState","values","setValues","errors","setErrors","handleInputChange","resetForm","width","Form","autoComplete","URL","insertEmployee","employee","getAllEmployees","a","Axios","post","result","console","log","updateEmployee","patch","_id","deleteEmployee","email","delete","setRecords","get","data","employees","reverse","authenticateHR","valid","invalid","username","HR","password","genderItems","fullName","mobile","city","gender","hireDate","Date","isPermanent","type","EmployeeForm","addOrEdit","recordForEdit","fieldValues","temp","test","length","Object","every","x","useEffect","onSubmit","preventDefault","xs","pageHeader","display","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","subTitle","icon","Paper","elevation","square","Card","Typography","component","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","descendingComparator","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialog","textAlign","dialogContent","dialogAction","justifyContent","titleIcon","ConfirmDialog","confirmDialog","setConfirmDialog","disableRipple","DialogActions","onConfirm","pageContent","newButton","right","Employees","setRecordForEdit","employeeService","React","setFilterFn","InputProps","startAdornment","InputAdornment","Search","filter","toLowerCase","includes","startIcon","TableBody","openInPopup","HRLogIn","setHRValidated","createMuiTheme","background","default","overrides","MuiAppBar","transform","MuiIconButton","appMain","App","HRValidated","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e7325a6.chunk.js","sourcesContent":["import React from 'react'\nimport { AppBar, Toolbar, Grid, InputBase, IconButton, Badge, makeStyles } from '@material-ui/core'\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fff',\n\n    },\n    searchInput: {\n        opacity: '0.6',\n        padding: `0px ${theme.spacing(1)}px`,\n        fontSize: '0.8rem',\n        '&:hover': {\n            backgroundColor: '#f2f2f2'\n        },\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(1)\n        }\n    }\n}))\n\nexport default function Header() {\n\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n                <Grid container\n                    alignItems=\"center\">\n                    {/* <Grid item>\n                        <InputBase\n                            placeholder=\"Search topics\"\n                            className={classes.searchInput}\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\n                        />\n                    </Grid> */}\n                    <Grid item sm></Grid>\n                    <Grid item>\n                        <IconButton>\n                            <Badge badgeContent={0} color=\"secondary\">\n                                <NotificationsNoneIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <Badge badgeContent={0} color=\"primary\">\n                                <ChatBubbleOutlineIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <PowerSettingsNewIcon fontSize=\"small\" />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    )\n}\n","import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(0.5)\n    },\n    label: {\n        textTransform: 'none'\n    }\n}))\n\nexport default function Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}\n            classes={{ root: classes.root, label: classes.label }}>\n            {text}\n        </MuiButton>\n    )\n}\n","import React from 'react'\nimport { Button, makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minWidth: 0,\n        margin: theme.spacing(0.5)\n    },\n    secondary: {\n        backgroundColor: theme.palette.secondary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.secondary.main,\n        }\n    },\n    primary: {\n        backgroundColor: theme.palette.primary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.primary.main,\n        }\n    },\n}))\n\nexport default function ActionButton(props) {\n\n    const { color, children, onClick } = props;\n    const classes = useStyles();\n\n    return (\n        <Button\n            className={`${classes.root} ${classes[color]}`}\n            onClick={onClick}>\n            {children}\n        </Button>\n    )\n}\n","import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport Checkbox from \"./Checkbox\";\nimport DatePicker from \"./DatePicker\";\nimport Button from \"./Button\";\nimport ActionButton from \"./ActionButton\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    DatePicker,\n    Button,\n    ActionButton\n}\n\nexport default Controls;","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange, ...other } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...(error && {error:true, helperText:error} )}\n            {...other}\n\n        />\n    )\n}\n","import React from 'react'\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nexport default function RadioGroup(props) {\n\n    const { name, label, value, onChange, items } = props;\n\n    return (\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n            <MuiRadioGroup row\n                name={name}\n                value={value}\n                onChange={onChange}>\n                {\n                    items.map(\n                        item => (\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\n                        )\n                    )\n                }\n            </MuiRadioGroup>\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\n\nexport default function Select(props) {\n\n    const { name, label, value,error=null, onChange, options } = props;\n\n    return (\n        <FormControl variant=\"outlined\" {... (error && {error:true})}>\n            <InputLabel>{label}</InputLabel>\n            <MuiSelect\n                label={label}\n                name={name}\n                value={value}\n                onChange={onChange}>\n                <MenuItem value=\"\">None</MenuItem>\n                {\n                    options.map(\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                    )\n                }\n            </MuiSelect>\n            {error && <FormHelperText>{error}</FormHelperText>}\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\n\nexport default function Checkbox(props) {\n\n    const { name, label, value, onChange } = props;\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <FormControl>\n            <FormControlLabel\n                control={<MuiCheckbox\n                    name={name}\n                    color=\"primary\"\n                    checked={value}\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\n                />}\n                label={label}\n            />\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function DatePicker(props) {\n\n    const { name, label, value, onChange } = props\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\n                label={label}\n                format=\"MMM/dd/yyyy\"\n                name={name}\n                value={value}\n                onChange={date =>onChange(convertToDefEventPara(name,date))}\n\n            />\n        </MuiPickersUtilsProvider>\n    )\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialFValues,validateOnChange,validate) {\n\n\n    const [values, setValues] = useState(initialFValues);\n    const [errors, setErrors] = useState({});\n\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n\n        if(validateOnChange){\n            validate({[name]:value})\n        }\n    }\n    const resetForm=()=>{\n        setValues(initialFValues)\n        setErrors({})\n    }\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm     \n    }\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '80%',\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\nexport function Form(props) {\n    const classes = useStyles();\n    const { children, ...other } = props;\n    return (\n        <form className={classes.root} autoComplete=\"off\" {...other}>\n            {props.children}\n        </form>\n    )\n}\n\n","import Axios from \"axios\"\n\nconst KEYS = {\n    employees: 'employees',\n    employeeId: 'employeeId'\n}\nconst URL=\"http://localhost:3001/api/v1/employees/\"\n\n\nexport const getEmployeeTypes = () => ([\n    { id: 'Doctor', title: 'Doctor' },\n    { id: 'Nurse', title: 'Nurse' },\n    { id: 'Pharmacist', title: 'Pharmacist' }\n])\n\nconst asyncWrapper = (fn) => {\n    return async () => {\n      try {\n        await fn()\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n\n\n\nexport const insertEmployee= async(employee,getAllEmployees)=> {\n    // let employees = getAllEmployees();\n    // data['id'] = generateEmployeeId()\n    // employees.push(data)\n    // localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n    const result= await Axios.post(URL, employee);\n    console.log(result)\n    getAllEmployees()\n}\n\nexport const updateEmployee= async(employee,getAllEmployees)=> {\n    await Axios.patch(URL +employee._id,employee);\n    getAllEmployees()\n}\n\nexport const deleteEmployee=async(email,getAllEmployees)=> {\n    // let employees = getAllEmployees();\n    // employees = employees.filter(x => x.id != id)\n    // localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n    await Axios.delete(URL+ email);    \n    getAllEmployees()\n}\n\nexport function generateEmployeeId() {\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\n\nexport const getAllEmployees=async(setRecords)=>{\n    let data = await Axios.get(URL);\n    setRecords(data.data.employees.reverse()) \n}\n\n\nexport const authenticateHR=async(data,valid,invalid)=>{\n    console.log(data)\n    try{\n        let result = await Axios.get(URL+data.username);\n        let HR=result.data.HR\n        if(data.username== HR.username && data.password== HR.password)\n            valid()\n        else\n            invalid()\n    }catch(e){\n        invalid()\n    }\n}\n\n\n  \n// export const updateEmployee= async(employee,getAllEmployees) {\n//     let employees = getAllEmployees();\n//     let recordIndex = employees.findIndex(x => x.id == data.id);\n//     employees[recordIndex] = { ...data }\n//     localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n// }\n","import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\n\n\nconst genderItems = [\n    { id: 'male', title: 'Male' },\n    { id: 'female', title: 'Female' },\n    { id: 'other', title: 'Other' },\n]\n\nconst initialFValues = {\n    _id: '0',\n    fullName: '',\n    email: '',\n    mobile: '',\n    city: '',\n    gender: 'male',\n    hireDate: new Date(),\n    isPermanent: false,\n    type:'',\n    password:''\n}\n\nexport default function EmployeeForm(props) {\n    const { addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length ==11 ? \"\" : \"Mobile number must be of 11 numbers.\"\n        if ('type' in fieldValues)\n            temp.type = fieldValues.type.length != 0 ? \"\" : \"This field is required.\"\n        if ('password' in fieldValues)\n            temp.password= fieldValues.password.length >5 ? \"\" : \"Password must be greater then of 5 letters.\"\n        \n\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() => {\n        if (recordForEdit != null)\n            setValues({\n                ...recordForEdit\n            })\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                    <Controls.Input\n                        label=\"Email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n                    {!recordForEdit&&\n                    <Controls.Input\n                    label=\"Password\"\n                    name=\"password\"\n                    type='password'\n                    value={values.password}\n                    onChange={handleInputChange}\n                    error={errors.password}\n                />}\n                    \n                    <Controls.Input\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange}\n                        error={errors.mobile}\n                    />\n                    <Controls.Input\n                        label=\"City\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                    />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup\n                        name=\"gender\"\n                        label=\"Gender\"\n                        value={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"type\"\n                        label=\"Type\"\n                        value={values.type}\n                        onChange={handleInputChange}\n                        options={employeeService.getEmployeeTypes()}\n                        error={errors.type}\n                    />\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\" />\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick={resetForm} />\n                    </div>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n","import React from 'react'\nimport { Paper, Card, Typography, makeStyles, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fdfdff'\n    },\n    pageHeader:{\n        padding:theme.spacing(4),\n        display:'flex',\n        marginBottom:theme.spacing(2)\n    },\n    pageIcon:{\n        display:'inline-block',\n        padding:theme.spacing(2),\n        color:'#3c44b1'\n    },\n    pageTitle:{\n        paddingLeft:theme.spacing(4),\n        '& .MuiTypography-subtitle2':{\n            opacity:'0.6'\n        }\n    }\n}))\n\nexport default function PageHeader(props) {\n\n    const classes = useStyles();\n    const { title, subTitle, icon } = props;\n    return (\n        <Paper elevation={0} square className={classes.root}>\n            <div className={classes.pageHeader}>\n                <Card className={classes.pageIcon}>\n                    {icon}\n                </Card>\n                <div className={classes.pageTitle}>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\">\n                        {title}</Typography>\n                    <Typography\n                        variant=\"subtitle2\"\n                        component=\"div\">\n                        {subTitle}</Typography>\n                </div>\n            </div>\n        </Paper>\n    )\n}\n","import React, { useState } from 'react'\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records, headCells,filterFn) {\n\n    const classes = useStyles();\n\n    const pages = [5, 10, 25]\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\n    const [order, setOrder] = useState()\n    const [orderBy, setOrderBy] = useState()\n\n    const TblContainer = props => (\n        <Table className={classes.table}>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n\n        const handleSortRequest = cellId => {\n            const isAsc = orderBy === cellId && order === \"asc\";\n            setOrder(isAsc ? 'desc' : 'asc');\n            setOrderBy(cellId)\n        }\n\n        return (<TableHead>\n            <TableRow>\n                {\n                    headCells.map(headCell => (\n                        <TableCell key={headCell.id}\n                            sortDirection={orderBy === headCell.id ? order : false}>\n                            {headCell.disableSorting ? headCell.label :\n                                <TableSortLabel\n                                    active={orderBy === headCell.id}\n                                    direction={orderBy === headCell.id ? order : 'asc'}\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\n                                    {headCell.label}\n                                </TableSortLabel>\n                            }\n                        </TableCell>))\n                }\n            </TableRow>\n        </TableHead>)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10))\n        setPage(0);\n    }\n\n    const TblPagination = () => (<TablePagination\n        component=\"div\"\n        page={page}\n        rowsPerPageOptions={pages}\n        rowsPerPage={rowsPerPage}\n        count={records.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n    />)\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n    }\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n}\n","import { Dialog, DialogContent, DialogTitle, makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Controls from './controls/Controls'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n    const classes=useStyles()\r\n\r\n    const {title,children, openPopup,setOpenPopup} = props\r\n  return (\r\n    <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n    <DialogTitle className={classes.dialogTitle}>\r\n        <div style={{ display: 'flex' }}>\r\n            <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                {title}\r\n            </Typography>\r\n            <Controls.ActionButton\r\n                color=\"secondary\"\r\n                onClick={()=>{setOpenPopup(false)}}>\r\n                <CloseIcon />\r\n            </Controls.ActionButton>\r\n        </div>\r\n    </DialogTitle>\r\n    <DialogContent dividers>\r\n        {children}\r\n    </DialogContent>\r\n</Dialog>\r\n\r\n  )\r\n}\r\n","import React from 'react'\nimport { Snackbar, makeStyles } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        top: theme.spacing(9)\n    }\n}))\n\nexport default function Notification(props) {\n\n    const { notify, setNotify } = props;\n    const classes = useStyles()\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setNotify({\n            ...notify,\n            isOpen: false\n        })\n    }\n\n    return (\n        <Snackbar\n            className={classes.root}\n            open={notify.isOpen}\n            autoHideDuration={3000}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            onClose={handleClose}>\n            <Alert\n                severity={notify.type}\n                onClose={handleClose}>\n                {notify.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\nimport Controls from \"./controls/Controls\";\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\n\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        padding: theme.spacing(2),\n        position: 'absolute',\n        top: theme.spacing(5)\n    },\n    dialogTitle: {\n        textAlign: 'center'\n    },\n    dialogContent: {\n        textAlign: 'center'\n    },\n    dialogAction: {\n        justifyContent: 'center'\n    },\n    titleIcon: {\n        backgroundColor: theme.palette.secondary.light,\n        color: theme.palette.secondary.main,\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.light,\n            cursor: 'default'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '8rem',\n        }\n    }\n}))\n\nexport default function ConfirmDialog(props) {\n\n    const { confirmDialog, setConfirmDialog } = props;\n    const classes = useStyles()\n\n    return (\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\n            <DialogTitle className={classes.dialogTitle}>\n                <IconButton disableRipple className={classes.titleIcon}>\n                    <NotListedLocationIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent}>\n                <Typography variant=\"h6\">\n                    {confirmDialog.title}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {confirmDialog.subTitle}\n                </Typography>\n            </DialogContent>\n            <DialogActions className={classes.dialogAction}>\n                <Controls.Button\n                    text=\"No\"\n                    color=\"default\"\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\n                <Controls.Button\n                    text=\"Yes\"\n                    color=\"secondary\"\n                    onClick={confirmDialog.onConfirm} />\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport EmployeeForm from \"./EmployeeForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from \"../../components/useTable\";\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from \"../../components/controls/Controls\";\nimport { Search } from \"@material-ui/icons\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from \"../../components/Popup\";\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Notification from \"../../components/Notification\";\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\n\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: theme.spacing(5),\n        padding: theme.spacing(3)\n    },\n    searchInput: {\n        width: '75%'\n    },\n    newButton: {\n        position: 'absolute',\n        right: '10px'\n    }\n}))\n\n\nconst headCells = [\n    { id: 'fullName', label: 'Employee Name' },\n    { id: 'email', label: 'Email Address (Personal)' },\n    { id: 'mobile', label: 'Mobile Number' },\n    { id: 'type', label: 'Type' },\n    { id: 'isPermanent', label: 'Permanent' },\n    { id: 'actions', label: 'Actions', disableSorting: true }\n]\n\nexport default function Employees() {\n\n    const classes = useStyles();\n    const [recordForEdit, setRecordForEdit] = useState(null)\n    const [records, setRecords] = useState([])\n    const getAllEmployees=async()=>{\n        employeeService.getAllEmployees(setRecords)\n    }\n    \n    \n    React.useEffect(getAllEmployees,[0])\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\n    const [openPopup, setOpenPopup] = useState(false)\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records, headCells, filterFn);\n\n    const handleSearch = e => {\n        let target = e.target;\n        setFilterFn({\n            fn: items => {\n                if (target.value == \"\")\n                    return items;\n                else\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\n            }\n        })\n    }\n\n    const addOrEdit = (employee, resetForm) => {\n        if (employee._id == '0'){\n            delete employee._id\n            employeeService.insertEmployee(employee,getAllEmployees)\n        }\n        else{\n            employeeService.updateEmployee(employee,getAllEmployees)\n        }\n        resetForm()\n        setRecordForEdit(null)\n        setOpenPopup(false)\n\n        // setRecords(employeeService.getAllEmployees())\n\n        setNotify({\n            isOpen: true,\n            message: 'Submitted Successfully',\n            type: 'success'\n        })\n    }\n\n    const openInPopup = item => {\n        setRecordForEdit(item)\n        setOpenPopup(true)\n    }\n\n    const onDelete = _id => {\n        employeeService.deleteEmployee(_id,getAllEmployees);\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        })\n        setNotify({\n            isOpen: true,\n            message: 'Deleted Successfully',\n            type: 'error'\n        })\n    }\n\n    return (\n        <>\n            <PageHeader\n                title=\"Employees\"\n                subTitle=\"View, add, and update Employees: Doctor, Nurse, and Pharmacist\"\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\n            />\n            <Paper className={classes.pageContent}>\n\n                <Toolbar>\n                    <Controls.Input\n                        label=\"Search Employee\"\n                        className={classes.searchInput}\n                        InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\">\n                                <Search />\n                            </InputAdornment>)\n                        }}\n                        onChange={handleSearch}\n                    />\n                    <Controls.Button\n                        text=\"Add New\"\n                        variant=\"outlined\"\n                        startIcon={<AddIcon />}\n                        className={classes.newButton}\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\n                    />\n                </Toolbar>\n                <TblContainer>\n                    <TblHead />\n                    <TableBody>\n                        {\n                            recordsAfterPagingAndSorting().map(item =>\n                                (<TableRow key={item._id}>\n                                    <TableCell>{item.fullName}</TableCell>\n                                    <TableCell>{item.email}</TableCell>\n                                    <TableCell>{item.mobile}</TableCell>\n                                    <TableCell>{item.type}</TableCell>\n                                    <TableCell>{item.isPermanent ? \"Yes\" : \"No\"}</TableCell>\n                                    \n                                    <TableCell>\n                                        <Controls.ActionButton\n                                            color=\"primary\"\n                                            onClick={() => { openInPopup(item) }}>\n                                            <EditOutlinedIcon fontSize=\"small\" />\n                                        </Controls.ActionButton>\n                                        <Controls.ActionButton\n                                            color=\"secondary\"\n                                            onClick={() => {\n                                                setConfirmDialog({\n                                                    isOpen: true,\n                                                    title: 'Are you sure to delete this record?',\n                                                    subTitle: \"You can't undo this operation\",\n                                                    onConfirm: () => { onDelete(item._id) }\n                                                })\n                                            }}>\n                                            <CloseIcon fontSize=\"small\" />\n                                        </Controls.ActionButton>\n                                    </TableCell>\n                                </TableRow>)\n                            )\n                        }\n                    </TableBody>\n                </TblContainer>\n                <TblPagination />\n            </Paper>\n            <Popup\n                title=\"Employee Form\"\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n            >\n                <EmployeeForm\n                    recordForEdit={recordForEdit}\n                    addOrEdit={addOrEdit} />\n            </Popup>\n            <Notification\n                notify={notify}\n                setNotify={setNotify}\n            />\n            <ConfirmDialog\n                confirmDialog={confirmDialog}\n                setConfirmDialog={setConfirmDialog}\n            />\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport PageHeader from '../../components/PageHeader';\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport * as employeeService from \"../../services/employeeService\";\r\n\r\n\r\n\r\nconst initialFValues = {\r\n    username: '',\r\n    password: ''\r\n}\r\n\r\nexport default function HRLogIn(props) {\r\n\r\n    const {setHRValidated,setNotify}= props\r\n\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('username' in fieldValues)\r\n            temp.username = fieldValues.username ? \"\" : \"This field is required.\"\r\n        if ('password' in fieldValues)\r\n            temp.password = fieldValues.password.length != 0 ? \"\" : \"This field is required.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const invalid = () => {\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Username or password is invalid',\r\n            type: 'error'\r\n        })\r\n    }\r\n    const valid=()=>{\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'HR Logged in successfully',\r\n            type: 'success'\r\n        })\r\n        setHRValidated(true)\r\n    }\r\n\r\n    const authenticateHR = async () => {\r\n        await employeeService.authenticateHR(values,valid,invalid)\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            authenticateHR()\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title=\"HR Manager\"\r\n                subTitle=\"Log in\"\r\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\r\n            />\r\n            <Form onSubmit={handleSubmit}>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <Controls.Input\r\n                            name=\"username\"\r\n                            label=\"Username\"\r\n                            value={values.username}\r\n                            onChange={handleInputChange}\r\n                            error={errors.username}\r\n                        />\r\n                        <Controls.Input\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            type='password'\r\n                            value={values.password}\r\n                            onChange={handleInputChange}\r\n                            error={errors.password}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div>\r\n                            <Controls.Button\r\n                                type=\"submit\"\r\n                                text=\"Submit\" />\r\n                            <Controls.Button\r\n                                text=\"Reset\"\r\n                                color=\"default\"\r\n                                onClick={resetForm} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Header from \"./components/Header\";\n\nimport Employees from \"./pages/Employees/Employees\";\nimport HRLogIn from './pages/HR/HRLogIn';\nimport Notification from './components/Notification';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: '#3c44b126'\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: '#f8324526'\n    },\n    background: {\n      default: \"#f4f5fd\"\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        transform: 'translateZ(0)'\n      }\n    }\n  },\n  props: {\n    MuiIconButton: {\n      disableRipple: true\n    }\n  }\n})\n\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '1px',\n    width: '100%'\n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n\n  const [HRValidated, setHRValidated] = React.useState(false)\n  \n const temp='ss'\n  const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' })\n\n\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <div className={classes.appMain}>\n          {HRValidated ? <><Header /> <Employees /> </>: <HRLogIn setHRValidated={setHRValidated} setNotify={setNotify}/>}\n        </div>\n        <CssBaseline />\n      </ThemeProvider>\n      <Notification\n        notify={notify}\n        setNotify={setNotify}\n      />\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App />,\ndocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}